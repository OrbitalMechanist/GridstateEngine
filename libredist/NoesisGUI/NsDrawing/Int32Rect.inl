////////////////////////////////////////////////////////////////////////////////////////////////////
// NoesisGUI - http://www.noesisengine.com
// Copyright (c) 2013 Noesis Technologies S.L. All Rights Reserved.
////////////////////////////////////////////////////////////////////////////////////////////////////


namespace Noesis
{

////////////////////////////////////////////////////////////////////////////////////////////////////
inline Int32Rect::Int32Rect(): x(0), y(0), width(0u), height(0u)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline Int32Rect::Int32Rect(int32_t x_, int32_t y_, uint32_t width_, uint32_t height_):
    x(x_), y(y_), width(width_), height(height_)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline bool Int32Rect::operator==(const Int32Rect& rect) const
{
    return x == rect.x && y == rect.y && width == rect.width && height == rect.height;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline bool Int32Rect::operator!=(const Int32Rect& rect) const
{
    return !(*this == rect);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline bool Int32Rect::IsEmpty() const
{
    return x == 0 && y == 0 && width == 0 && height == 0;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline bool Int32Rect::HasArea() const
{
    return width > 0 && height > 0;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline Int32Rect Int32Rect::Empty()
{
    return Int32Rect(0, 0, 0, 0);
}

}
